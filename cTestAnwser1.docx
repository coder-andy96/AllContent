一、判断题
1.	为了文件操作安全考虑，应当尽量使用文件名作为文件操作的标识。 错
2.	输入校验中如果没有特殊要求，应当优先考虑采用“白名单”校验形式。 对
3.	memcpy_s可以安全的在重叠内存之间复制数据。 错
4.	标准化校验文件的路径是为了防止文件类型替换，比如.txt替换成.jsp。 错
5.	产品不能使用MD5算法对口令进行加密，原因是MD5算法是对称加密算法。 错
6.	根据公司红线要求，口令明文不能保存在日志中，但口令密文是可以的。 错
7.	伪随机数攻击，其实就是缩小seed范围，最终猜测所有可能的序列组合。 对
8.	除非入参是硬编码的或过滤掉入参中的命令分隔符，否则禁止使用system()和popen()。 对
9.	环境变量是可信输入，可以作为安全行为的依据。 错
10.	来自外部的用户输入在任何时候都是不可信的，因此所有外部输入都必须在校验之后才能使用。 对
11.	 当计算结果用于数组下标访问时，一定要校验，确保不会产生越界访问的情况。 对
12.	 在对输入进行校验时，“黑名单”比“白名单”更受推荐的原因是程序员可以不用绞尽脑汁去考虑哪些字符时可以接受的。 错
13.	i，j，k只可以用作循环变量，不能用于其它局部变量。对
14.	 （判断）系统内存很充分，没有必要太在意是否有重复申请内存的情况。错
15.	 （判断）避免在注释中使用缩写，除非是业界通用或子系统内标准化的缩写  对
16.	 （判断）优秀的代码一定有全面而完善的注释。   错
17.	一般情况下，在信号处理程序中不要调用输入/输出（I/O）函数,因为这些函数一般都是非异步安全的，容易导致各种未定义的行为。 对
18.	根据公司红线要求，口令明文不能保存在日志中，但口令密文是可以的。 错
19.	动态申请的内存和非动态申请的内存都是由内存分配器管理的，但是释放非动态申请的内存可能会造成拒绝服务，甚至产生严重的安全漏洞。 错
20.	 （判断）如果一个.c文件不需要对外公布任何接口，则其就不应当存在，除非它是程序的入口，如main函数所在的文件。 对
21.	 当资源被创建或者被分配后，开发人员应该清楚该资源的潜在失效、过期路径，并在合适的代码阶段采用合适的手段释放该资源。 对
22.	 程序中不允许使用未初始化的内存变量。 对
23.	 system()函数禁用的原因是该函数调用了命令解析器来执行命令，这很容易导致命令注入。 对
24.	 整数在转换时可能会出现符号错误和截断错误，二者都造成数据丢失，产生安全问题。 对
25.	 （判断）头文件应当职责单一    对
26.	 为了程序设计便利，应尽可能给程序赋予更多的权限，以简化业务流程。 错
27.	 （判断）即使所有操作符都是相同的，如果涉及类型转换或者量级提升，也应该使用括号控制计算的次序 对
28.	 （判断）头文件中适合放置接口的声明，不适合放置实现。 对
29.	 申请内存时，必须对指定的内存大小整数做合法性校验。确保不为0，并且大小足够保存源数据。     对
30.	 从不可信输入源接收的文件路径应当进行标准化后，再进行校验及进一步操作。 对
31.	 使用负数申请内存是可以的，因为在申请时负数会被强制转化为一个正整数。 错
32.	 标准化校验文件的路径是为了防止文件类型替换，比如.txt替换成.jsp。  错
33.	 （判断）断言是对某种内部模块的假设条件进行检查，如果假设不成立，说明存在编程、设计错误。  对
34.	 硬编码的指令可以直接作为system.exec()，system()和popen()函数的入参。 对
35.	（判断）将已释放内存的指针置NULL，有助于防止引用已经释放的内存。 对
36.	 输入校验是一个非常好的安全编码原则，可以预防SQL注入、命令注入、死循环等几乎所有典型问题。    对
37.	 将未知长度的数据复制到固定长度的内存空间可能会造成缓冲区溢出，因此在进行复制之前应首先获取并检查数据长度。 对
38.	 创建敏感文件时，需要显示的指定文件的权限，从而可以防止未经授权的用户访问该文件。 对
39.	 class A{ void foo(bool); }; void A::foo(bool heap) { int localArray[2] = { 11,22 }; int *p = localArray; if (heap){ p = new int[2]; } delete[] p; } 该代码中正确的释放了内存，不会造成内存泄露。 错
40.	 只要将cookie设置为httponly就可以防御XSS攻击。 错
41.	

整数在转换时可能会出现符号错误和截断错误，二者都造成数据丢失，产生安全问题。
 True False
Answers of examinees：True Wrong answer，正确答案：False
questionScore:(1.0)   Current Score: 0.0 
2.True or False 
（判断）条件预处理语句必须和代码采用相同的缩进级别。
 True False
Answers of examinees：False  Correct answer
questionScore:(1.0)   Current Score: 1.0 

42.	只要将cookie设置为httponly就可以防御XSS攻击。错
43.	程序中不允许使用未初始化的内存变量。对
44.	整数在转换时可能会出现符号错误和截断错误，二者都造成数据丢失，产生安全问题。对
45.	任何时候都要明确一个原则：任何用户输入都是不可信的。对
46.	getenv()函数是线程安全的,因此可以存储其返回的字符串指针。错
47.	根据公司红线要求，口令明文不能保存在日志中，但口令密文是可以的。错
48.	当资源被创建或者被分配后，开发人员应该清楚该资源的潜在失效、过期路径，并在合适的代码阶段采用合适的手段释放该资源。对
49.	为避免敏感信息泄露，存储口令、密钥的变量在使用完后应该显式的覆盖或清空。对
50.	（判断）头文件中适合放置接口的声明，不适合放置实现。对
51.	输入校验是一个非常好的安全编码原则，可以预防SQL注入、命令注入、死循环等几乎所有典型问题。对
52.	（判断）标准内存分配函数malloc()、calloc()的调用需要检查返回值，以判断内存分配是否成功。对
53.	重复释放内存不会导致堆溢出漏洞，没有什么安全风险。错
54.	从不可信输入源接收的文件路径应当进行标准化后，再进行校验及进一步操作。对
55.	web页面中用户输入的账户名、密码等信息可以直接存储到服务器中，并可以在管理web页面中展示以进行维护。错
56.	动态申请的内存和非动态申请的内存都是由内存分配器管理的，但是释放非动态申请的内存可能会造成拒绝服务，甚至产生严重的安全漏洞。错
57.	system()函数禁用的原因是该函数调用了命令解析器来执行命令，这很容易导致命令注入。对
58.	class A{ void foo(bool); }; void A::foo(bool heap) { int localArray[2] = { 11,22 }; int *p = localArray; if (heap){ p = new int[2]; } delete[] p; } 该代码中正确的释放了内存，不会造成内存泄露。错
59.	（判断）注释与所描述内容进行同样的缩排。对
60.	可以用POSIX的exec系列函数或Win32 API CreateProcess()等与命令解释器无关的进程创建函数来替代system()/popen()，以避免命令注入漏洞。对
61.	（判断）所有的if ... else if结构应该由else子句结束 ；switch语句必须有default分支。对
62.	可以使用从环境变量读取的信息来动态拼接SQL语句查询数据库。错
63.	标准化校验文件的路径是为了防止文件类型替换，比如.txt替换成.jsp。错
64.	（判断）为使得函数具有可重入性，应使用static局部变量。错
65.	（判断）函数调用不要作为另一个函数的参数使用，否则对于代码的调试、阅读都不利。对
66.	一般情况下，在信号处理程序中不要调用输入/输出（I/O）函数,因为这些函数一般都是非异步安全的，容易导致各种未定义的行为。对
67.	（判断）在同一项目组或产品组内，要有一套统一的为集成测试与系统联调准备的调测开关及相应打印函数，并且要有详细的说明。对
68.	（判断）注释应放在其代码上方相邻位置或右方，不可放在下面。对
69.	将未知长度的数据复制到固定长度的内存空间可能会造成缓冲区溢出，因此在进行复制之前应首先获取并检查数据长度。对
70.	（判断）本地构建非常复杂，所以本地构建工具的配置应该和持续集成的不一致。错
71.	（判断）只需要关注接口，而没有必要关注其内部实现。错
72.	

（判断）设计函数是需要考虑避免函数的代码块嵌套过深，新增加函数的代码块嵌套不应该超过4层。
 对 错

考生答案：对  回答正确
试题分数:(1.0)   当前得分: 1.0 

23.判断题 
如果有可能，使用硬件生成用于安全用途的随机数。
 对 错

考生答案：对  回答正确
试题分数:(1.0)   当前得分: 1.0 

